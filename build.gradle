buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.2.5.RELEASE")
        classpath 'com.bmuschko:gradle-docker-plugin:2.5'
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'spring-boot'
apply plugin: 'maven'
apply plugin: 'com.bmuschko.docker-remote-api'


import com.bmuschko.gradle.docker.tasks.image.DockerBuildImage
import com.bmuschko.gradle.docker.tasks.image.DockerPushImage
task zip(type: Tar, dependsOn: bootRepackage) {
    extension = 'tar.gz'
    from '.'
    baseName = 'as-gps-firehose'
    include 'config/**'
    include 'run-bin/*.sh'
    include 'run-bin/*.bat'
    include 'run-bin/*.sql'
    include 'build/libs/*.jar'
}
build.dependsOn(zip)

repositories {
    mavenCentral()
}

docker{
    url = "${dockerHost}"
    if ( "$certUrl" != "" )
        certPath = new File("$certUrl")

}

configurations {
    compile.exclude module: 'spring-boot-starter-logging'
    compile.exclude module: 'logback-classic'
    compile.exclude module: 'logback-core'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    compile 'org.springframework.boot:spring-boot-starter-web'
    compile 'org.springframework.boot:spring-boot-starter-actuator' 
    compile 'org.springframework.boot:spring-boot-starter-log4j'
   	compile 'com.goebl:david-webb:1.1.0'
    testCompile 'org.springframework.boot:spring-boot-starter-test'
}


task buildImage(type: DockerBuildImage) {
    dependsOn zip
    quiet = false
    inputDir = projectDir

    tag = "$registerBaseName/$dockerBranch/$project.name:$dockerTag"
}
task pushImage(type: DockerPushImage) {
    dependsOn buildImage
    imageName = "$registerBaseName/$dockerBranch/$project.name"
    tag="$dockerTag"
}
task wrapper(type: Wrapper) {
    gradleVersion = '2.3'
}



